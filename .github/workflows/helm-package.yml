name: Helm Package and Publish

on:
  pull_request:
    branches:
      - '*'
      - '!release-**'

jobs:
  PackageCatalog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Catalog
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./catalog
  PackageControl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./control
  PackageControlAPI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./gm-control-api
  PackageDashboard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./dashboard
  PackageJWT:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./jwt
  PackageData:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./data
  PackageEdge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./edge
  PackageSlo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./slo
  PackageGreyMatter:
    runs-on: ubuntu-latest
    needs:
      [
        PackageCatalog,
        PackageSlo,
        PackageEdge,
        PackageData,
        PackageJWT,
        PackageDashboard,
        PackageControlAPI,
        PackageControl,
        PackageCatalog,
      ]
    steps:
      - uses: actions/checkout@v1
      - name: Package Grey Matter
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./greymatter
  NotifySlack:
    runs-on: ubuntu-latest
    needs: PackageGreyMatter
    steps:
      - name: Slack notification
        env:
          SLACK_CHANNEL: 'decipher-sres-bots'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHubActions # Optional.
          SLACK_ICON: https://raw.githubusercontent.com/quintessence/slack-icons/master/images/github-logo-slack-icon.png
          SLACK_MESSAGE: 'Grey Matter Helm charts released to Staging'
        uses: rtCamp/action-slack-notify@master
