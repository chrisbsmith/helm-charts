# This workflow is meant to run when a PR is submitted.  It will attempt to
# package and push all charts to Decipher's staging repository.

name: Grey Matter Release to Staging

env:
  ACTION_STATE: 'success'

on:
  pull_request:
    types: [opened]
    branches:
      - 'release-**'

jobs:
  PackageCatalog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Package Catalog
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./catalog
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageControl:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./control
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageControlAPI:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./gm-control-api
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageDashboard:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./dashboard
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageJWT:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./jwt
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageJWTGov:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./jwt-gov
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageData:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./data
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageEdge:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./edge
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageSlo:
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v1
      - name: Package Control
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./slo
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  PackageGreyMatter:
    runs-on: ubuntu-latest
    if: success()
    needs:
      [
        PackageCatalog,
        PackageSlo,
        PackageEdge,
        PackageData,
        PackageJWT,
        PackageJWTGov,
        PackageDashboard,
        PackageControlAPI,
        PackageControl,
        PackageCatalog,
      ]
    steps:
      - uses: actions/checkout@v1
      - name: Point to Staging
        run: |
          sed -i "s/helm-hosted/helm-staging/g" greymatter/requirements.yaml
      - name: Package Grey Matter
        uses: chrisbsmith/greymatter-helm-action@master
        with:
          NEXUS_URL: https://nexus.production.deciphernow.com/repository/helm-staging/
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASS }}
          args: ./greymatter
      - name: Set Status
        run: |
          echo "::set-env name=ACTION_STATE::${{ job.status }}"
          echo "$ACTION_STATE"
  NotifySlackSuccess:
    runs-on: ubuntu-latest
    if: success()
    needs: PackageGreyMatter
    steps:
      - name: Slack notification
        env:
          SLACK_CHANNEL: 'decipher-sres-bots'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHubActions
          SLACK_ICON: https://raw.githubusercontent.com/quintessence/slack-icons/master/images/github-logo-slack-icon.png
          SLACK_MESSAGE: 'Grey Matter Helm charts released to Staging'
        uses: rtCamp/action-slack-notify@master
  NotifySlackFailure:
    runs-on: ubuntu-latest
    if: failure()
    needs: PackageGreyMatter
    steps:
      - name: Slack notification
        env:
          SLACK_CHANNEL: 'decipher-sres-bots'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHubActions
          SLACK_ICON: https://raw.githubusercontent.com/quintessence/slack-icons/master/images/github-logo-slack-icon.png
          SLACK_MESSAGE: 'Grey Matter Helm charts failed to released to Staging'
          SLACK_COLOR: '#FF0000'
        uses: rtCamp/action-slack-notify@master
