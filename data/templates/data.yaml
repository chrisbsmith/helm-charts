kind: Deployment
apiVersion: extensions/v1beta1
#apiVersion: apps/v1
metadata:
  name: data-{{ .Release.Name | lower}}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.data.replicas | default 1 }}
  selector:
    matchLabels:
      app: data-{{ .Release.Name | lower}}
  template:
    metadata:
      labels:
        app: data-{{ .Release.Name | lower}}
    spec:
      containers:
      - name: data
        {{- if .Values.data.deploy.standalone }}
        image: {{ tpl .Values.data.standalone_image $ | quote }}
        {{- else }} 
        image: {{ tpl .Values.data.image $ | quote }}
        {{- end }}
        imagePullPolicy: {{ .Values.data.imagePullPolicy }}
        {{- if .Values.data.resources }}
        resources:
{{ toYaml .Values.data.resources | indent 10 }}
        {{- end }}
        env:
    {{- range $envvar := .Values.data.envvars }}
      {{- $envName := $envvar.name | upper | replace "." "_" | replace "-" "_" }}
        {{- if eq $envvar.type "secret" }}
        - name: {{ $envName }}
          valueFrom:
            secretKeyRef:
              name: {{ $envvar.secret }}
              key: {{ $envvar.key }}
        {{- else if eq $envvar.type "value" }}
        - name: {{ $envName }}
          value: {{ tpl $envvar.value $ | quote }}
        {{- end }}
    {{- end  }}   
      
        - name: MONGOHOST
          value: {{ template "greymatter.mongo.address" . }}
        
        {{- if .Values.mongo.ssl.enabled }}
        - name: MONGO_USE_TLS
          value: "true"
        - name: MONGO_CERT
          valueFrom: 
            secretKeyRef: 
              name: {{ .Values.mongo.ssl.name }}
              key: cert_b64
        - name: MONGO_KEY
          valueFrom: 
            secretKeyRef: 
              name: {{ .Values.mongo.ssl.name }}
              key: key_b64
        - name: MONGO_TRUST
          valueFrom: 
            secretKeyRef: 
              name: {{ .Values.mongo.ssl.name }}
              key: ca_b64
        {{- end }}
        ports:
        - containerPort: 8181
          name: internal
          protocol: TCP
      - name: sidecar
        {{- if .Values.data.deploy.standalone }}
        image: {{ tpl .Values.sidecar.standalone_image $ | quote }}
        {{- else }} 
        image: {{ tpl .Values.sidecar.image $ | quote }}
        {{- end }}
        env:
          {{- include "greymatter.envvars" . | indent 10 }}
          - name: XDS_CLUSTER
            {{- if .Values.data.deploy.standalone }}
            {{- if .Values.data.deploy.xds.address }}
            value: {{ .Values.data.deploy.xds.cluster }}
            {{- end }}
            {{- else }}
            value: {{ .Values.global.xds.cluster | quote }}
            {{- end }}
          - name: XDS_HOST
            {{- if .Values.data.deploy.standalone }}
            {{- if .Values.data.deploy.xds.address }}
            value: {{ .Values.data.deploy.xds.address }}
            {{- end }}
            {{- else }}
            value: "xds.{{ .Release.Namespace }}.svc.cluster.local"
            {{- end }}
          - name: XDS_PORT
            value: {{ .Values.global.xds.port | quote }}
          - name: ZK_ADDRS
            {{- if .Values.data.deploy.standalone }}
            {{- if .Values.data.deploy.exhibitor_address }}
            value: {{ .Values.data.deploy.exhibitor_address }}
            {{- else }}
            value: {{ template "greymatter.exhibitor.address" . }}
            {{- end }}
            {{- else }}
            value: {{ template "greymatter.exhibitor.address" . }}
            {{- end }}
          - name: ZK_ANNOUNCE_PATH
            {{- if .Values.data.deploy.standalone }}
            {{- if .Values.data.deploy.base_path }}
            value: {{ tpl .Values.data.deploy.base_path $ | quote }}
            {{- end }}
            {{- else }}
            value: {{ tpl .Values.data.base_path $ | quote }}
            {{- end }}
          - name: TIMEOUT
            value: {{ .Values.sidecar.timeout | quote  }}


        imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
        {{- if .Values.sidecar.resources }}
        resources:
{{ toYaml .Values.sidecar.resources | indent 10 }}
        {{- end }}
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: metrics
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/proxy/tls/sidecar
          name: sidecar
      imagePullSecrets:
      - name: {{ if .Values.data.deploy.resources.docker_secret.create }}docker.secret{{else}}{{ .Values.data.deploy.resources.docker_secret.manual_name }}{{ end }}
      volumes:
      - name: sidecar
        secret:
          secretName: sidecar
      - name: data
        secret:
          secretName: {{ if .Values.data.deploy.resources.data_secret.create }}data{{else}}{{ .Values.data.deploy.resources.data_secret.manual_name }}{{ end }}
      - name: jwt-security
        secret:
          secretName: jwt-security
